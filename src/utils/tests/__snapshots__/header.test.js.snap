// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app | component | header render should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div />,
        <div />,
        <div />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div />,
          <div />,
          <div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`app | component | header render should match snapshot with children 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Header>
    <HeaderLeft>
        <span>
            Left
        </span>
    </HeaderLeft>
    <HeaderRight>
        <span>
            Right
        </span>
    </HeaderRight>
</Header>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HeaderLeft>
          <span>
                    Left
          </span>
</HeaderLeft>,
        <HeaderRight>
          <span>
                    Right
          </span>
</HeaderRight>,
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": ThemedComponent {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "__glamorous__": undefined,
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 3,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": Array [
                                                              <HeaderLeft>
                                                                <span>
                                                                                        Left
                                                                </span>
                                        </HeaderLeft>,
                                                              <HeaderRight>
                                                                <span>
                                                                                        Right
                                                                </span>
                                        </HeaderRight>,
                                                            ],
                                                          }
                    }
/>,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <header
                                        class="css-fl33vd"
                    >
                                        <div>
                                                            <span>
                                                                                Left
                                                            </span>
                                        </div>
                                        <div />
                                        <div>
                                                            <span>
                                                                                Right
                                                            </span>
                                        </div>
                    </header>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": Array [
                <HeaderLeft>
                  <span>
                                    Left
                  </span>
</HeaderLeft>,
                <HeaderRight>
                  <span>
                                    Right
                  </span>
</HeaderRight>,
              ],
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 3,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": Array [
                                                              <HeaderLeft>
                                                                <span>
                                                                                        Left
                                                                </span>
                                        </HeaderLeft>,
                                                              <HeaderRight>
                                                                <span>
                                                                                        Right
                                                                </span>
                                        </HeaderRight>,
                                                            ],
                                                          }
                    }
/>,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <header
                                        class="css-fl33vd"
                    >
                                        <div>
                                                            <span>
                                                                                Left
                                                            </span>
                                        </div>
                                        <div />
                                        <div>
                                                            <span>
                                                                                Right
                                                            </span>
                                        </div>
                    </header>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": Array [
                                                                          <HeaderLeft>
                                                                            <span>
                                                                                                        Left
                                                                            </span>
                                                </HeaderLeft>,
                                                                          <HeaderRight>
                                                                            <span>
                                                                                                        Right
                                                                            </span>
                                                </HeaderRight>,
                                                                        ],
                                                                      }
                        }
/>,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": Array [
                                                                          <HeaderLeft>
                                                                            <span>
                                                                                                        Left
                                                                            </span>
                                                </HeaderLeft>,
                                                                          <HeaderRight>
                                                                            <span>
                                                                                                        Right
                                                                            </span>
                                                </HeaderRight>,
                                                                        ],
                                                                      }
                        }
/>,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Left",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <span>
                    Left
</span>,
                  "tag": 5,
                  "type": "span",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": ".0",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <span>
                    Left
</span>,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <HeaderLeft>
                  <span>
                                    Left
                  </span>
</HeaderLeft>,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": undefined,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Right",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <span>
                        Right
</span>,
                      "tag": 5,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": ".1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <span>
                        Right
</span>,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div>
                    <span>
                                        Right
                    </span>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div />,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div>
                <span>
                                Left
                </span>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div>
                  <HeaderLeft>
                                    <span>
                                                      Left
                                    </span>
                  </HeaderLeft>
</div>,
                <div />,
                <div>
                  <HeaderRight>
                                    <span>
                                                      Right
                                    </span>
                  </HeaderRight>
</div>,
              ],
              "className": "css-fl33vd",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <header
              class="css-fl33vd"
>
              <div>
                            <span>
                                          Left
                            </span>
              </div>
              <div />
              <div>
                            <span>
                                          Right
                            </span>
              </div>
</header>,
            "tag": 5,
            "type": "header",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div>
                <HeaderLeft>
                                <span>
                                                Left
                                </span>
                </HeaderLeft>
</div>,
              <div />,
              <div>
                <HeaderRight>
                                <span>
                                                Right
                                </span>
                </HeaderRight>
</div>,
            ],
          },
          "memoizedState": Object {
            "theme": Object {},
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 3,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": Array [
                                                              <HeaderLeft>
                                                                <span>
                                                                                        Left
                                                                </span>
                                        </HeaderLeft>,
                                                              <HeaderRight>
                                                                <span>
                                                                                        Right
                                                                </span>
                                        </HeaderRight>,
                                                            ],
                                                          }
                    }
/>,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <header
                                        class="css-fl33vd"
                    >
                                        <div>
                                                            <span>
                                                                                Left
                                                            </span>
                                        </div>
                                        <div />
                                        <div>
                                                            <span>
                                                                                Right
                                                            </span>
                                        </div>
                    </header>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": Array [
                <HeaderLeft>
                  <span>
                                    Left
                  </span>
</HeaderLeft>,
                <HeaderRight>
                  <span>
                                    Right
                  </span>
</HeaderRight>,
              ],
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 3,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": Array [
                    <HeaderLeft>
                      <span>
                                            Left
                      </span>
</HeaderLeft>,
                    <HeaderRight>
                      <span>
                                            Right
                      </span>
</HeaderRight>,
                  ],
                },
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "nextCallback": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": Array [
                                                              <HeaderLeft>
                                                                <span>
                                                                                        Left
                                                                </span>
                                        </HeaderLeft>,
                                                              <HeaderRight>
                                                                <span>
                                                                                        Right
                                                                </span>
                                        </HeaderRight>,
                                                            ],
                                                          }
                    }
/>,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <header
                                        class="css-fl33vd"
                    >
                                        <div>
                                                            <span>
                                                                                Left
                                                            </span>
                                        </div>
                                        <div />
                                        <div>
                                                            <span>
                                                                                Right
                                                            </span>
                                        </div>
                    </header>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "className": "css-fl33vd",
        "context": Object {
          "__glamorous__": undefined,
        },
        "props": Object {
          "children": Array [
            <div>
              <HeaderLeft>
                            <span>
                                          Left
                            </span>
              </HeaderLeft>
</div>,
            <div />,
            <div>
              <HeaderRight>
                            <span>
                                          Right
                            </span>
              </HeaderRight>
</div>,
          ],
        },
        "refs": Object {},
        "setTheme": [Function],
        "state": Object {
          "theme": Object {},
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
        "warned": true,
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div>
            <HeaderLeft>
                        <span>
                                    Left
                        </span>
            </HeaderLeft>
</div>,
          <div />,
          <div>
            <HeaderRight>
                        <span>
                                    Right
                        </span>
            </HeaderRight>
</div>,
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": <header
          class="css-fl33vd"
>
          <div>
                    <span>
                              Left
                    </span>
          </div>
          <div />
          <div>
                    <span>
                              Right
                    </span>
          </div>
</header>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <HeaderLeft>
                            <span>
                                          Left
                            </span>
              </HeaderLeft>
</div>,
            <div />,
            <div>
              <HeaderRight>
                            <span>
                                          Right
                            </span>
              </HeaderRight>
</div>,
          ],
          "className": "css-fl33vd",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div>
              <span>
                            Left
              </span>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <HeaderLeft>
                <span>
                                Left
                </span>
</HeaderLeft>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": ".0",
                "nodeType": "function",
                "props": Object {
                  "children": <span>
                    Left
</span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": <span>
                    Left
</span>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Left",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Left",
                  ],
                  "type": "span",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "div",
          },
          Object {
            "instance": <div>
              <span>
                            Right
              </span>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <HeaderRight>
                <span>
                                Right
                </span>
</HeaderRight>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": ".1",
                "nodeType": "function",
                "props": Object {
                  "children": <span>
                    Right
</span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": <span>
                    Right
</span>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Right",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Right",
                  ],
                  "type": "span",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "header",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HeaderLeft>
            <span>
                        Left
            </span>
</HeaderLeft>,
          <HeaderRight>
            <span>
                        Right
            </span>
</HeaderRight>,
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": ThemedComponent {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "__glamorous__": undefined,
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {},
          "_reactInternalFiber": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": Array [
                                                                    <HeaderLeft>
                                                                      <span>
                                                                                                Left
                                                                      </span>
                                            </HeaderLeft>,
                                                                    <HeaderRight>
                                                                      <span>
                                                                                                Right
                                                                      </span>
                                            </HeaderRight>,
                                                                  ],
                                                                }
                      }
/>,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <HeaderLeft>
                    <span>
                                        Left
                    </span>
</HeaderLeft>,
                  <HeaderRight>
                    <span>
                                        Right
                    </span>
</HeaderRight>,
                ],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": Array [
                                                                    <HeaderLeft>
                                                                      <span>
                                                                                                Left
                                                                      </span>
                                            </HeaderLeft>,
                                                                    <HeaderRight>
                                                                      <span>
                                                                                                Right
                                                                      </span>
                                            </HeaderRight>,
                                                                  ],
                                                                }
                      }
/>,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": Array [
                                                                                                  <HeaderLeft>
                                                                                                    <span>
                                                                                                                                        Left
                                                                                                    </span>
                                                                </HeaderLeft>,
                                                                                                  <HeaderRight>
                                                                                                    <span>
                                                                                                                                        Right
                                                                                                    </span>
                                                                </HeaderRight>,
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": Array [
                                                                                <HeaderLeft>
                                                                                  <span>
                                                                                                                Left
                                                                                  </span>
                                                    </HeaderLeft>,
                                                                                <HeaderRight>
                                                                                  <span>
                                                                                                                Right
                                                                                  </span>
                                                    </HeaderRight>,
                                                                              ],
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <header
                                                    class="css-fl33vd"
                          >
                                                    <div>
                                                                              <span>
                                                                                                        Left
                                                                              </span>
                                                    </div>
                                                    <div />
                                                    <div>
                                                                              <span>
                                                                                                        Right
                                                                              </span>
                                                    </div>
                          </header>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Left",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <span>
                      Left
</span>,
                    "tag": 5,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": ".0",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <span>
                      Left
</span>,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <HeaderLeft>
                    <span>
                                        Left
                    </span>
</HeaderLeft>,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <HeaderLeft>
                              <span>
                                                            Left
                              </span>
</HeaderLeft>,
                            <HeaderRight>
                              <span>
                                                            Right
                              </span>
</HeaderRight>,
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": Array [
                                                                                                        <HeaderLeft>
                                                                                                          <span>
                                                                                                                                                Left
                                                                                                          </span>
                                                                    </HeaderLeft>,
                                                                                                        <HeaderRight>
                                                                                                          <span>
                                                                                                                                                Right
                                                                                                          </span>
                                                                    </HeaderRight>,
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <header
                                                        class="css-fl33vd"
                            >
                                                        <div>
                                                                                    <span>
                                                                                                                Left
                                                                                    </span>
                                                        </div>
                                                        <div />
                                                        <div>
                                                                                    <span>
                                                                                                                Right
                                                                                    </span>
                                                        </div>
                            </header>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": undefined,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <header
                                                                class="css-fl33vd"
                                >
                                                                <div>
                                                                                                <span>
                                                                                                                                Left
                                                                                                </span>
                                                                </div>
                                                                <div />
                                                                <div>
                                                                                                <span>
                                                                                                                                Right
                                                                                                </span>
                                                                </div>
                                </header>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": Array [
                                                                                                              <HeaderLeft>
                                                                                                                <span>
                                                                                                                                                        Left
                                                                                                                </span>
                                                                        </HeaderLeft>,
                                                                                                              <HeaderRight>
                                                                                                                <span>
                                                                                                                                                        Right
                                                                                                                </span>
                                                                        </HeaderRight>,
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": Array [
                                                                                                              <HeaderLeft>
                                                                                                                <span>
                                                                                                                                                        Left
                                                                                                                </span>
                                                                        </HeaderLeft>,
                                                                                                              <HeaderRight>
                                                                                                                <span>
                                                                                                                                                        Right
                                                                                                                </span>
                                                                        </HeaderRight>,
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": Array [
                                <HeaderLeft>
                                  <span>
                                                                    Left
                                  </span>
</HeaderLeft>,
                                <HeaderRight>
                                  <span>
                                                                    Right
                                  </span>
</HeaderRight>,
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": Array [
                                <HeaderLeft>
                                  <span>
                                                                    Left
                                  </span>
</HeaderLeft>,
                                <HeaderRight>
                                  <span>
                                                                    Right
                                  </span>
</HeaderRight>,
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <HeaderLeft>
                            <span>
                                                        Left
                            </span>
</HeaderLeft>,
                          <HeaderRight>
                            <span>
                                                        Right
                            </span>
</HeaderRight>,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": Array [
                              <HeaderLeft>
                                <span>
                                                                Left
                                </span>
</HeaderLeft>,
                              <HeaderRight>
                                <span>
                                                                Right
                                </span>
</HeaderRight>,
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <header
                                                                class="css-fl33vd"
                                >
                                                                <div>
                                                                                                <span>
                                                                                                                                Left
                                                                                                </span>
                                                                </div>
                                                                <div />
                                                                <div>
                                                                                                <span>
                                                                                                                                Right
                                                                                                </span>
                                                                </div>
                                </header>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": Array [
                                                                                                              <HeaderLeft>
                                                                                                                <span>
                                                                                                                                                        Left
                                                                                                                </span>
                                                                        </HeaderLeft>,
                                                                                                              <HeaderRight>
                                                                                                                <span>
                                                                                                                                                        Right
                                                                                                                </span>
                                                                        </HeaderRight>,
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": Array [
                                                                                                              <HeaderLeft>
                                                                                                                <span>
                                                                                                                                                        Left
                                                                                                                </span>
                                                                        </HeaderLeft>,
                                                                                                              <HeaderRight>
                                                                                                                <span>
                                                                                                                                                        Right
                                                                                                                </span>
                                                                        </HeaderRight>,
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": Array [
                                                                                            <HeaderLeft>
                                                                                              <span>
                                                                                                                                Left
                                                                                              </span>
                                                            </HeaderLeft>,
                                                                                            <HeaderRight>
                                                                                              <span>
                                                                                                                                Right
                                                                                              </span>
                                                            </HeaderRight>,
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <header
                                                            class="css-fl33vd"
                              >
                                                            <div>
                                                                                          <span>
                                                                                                                        Left
                                                                                          </span>
                                                            </div>
                                                            <div />
                                                            <div>
                                                                                          <span>
                                                                                                                        Right
                                                                                          </span>
                                                            </div>
                              </header>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": Array [
                                <HeaderLeft>
                                  <span>
                                                                    Left
                                  </span>
</HeaderLeft>,
                                <HeaderRight>
                                  <span>
                                                                    Right
                                  </span>
</HeaderRight>,
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": Array [
                                <HeaderLeft>
                                  <span>
                                                                    Left
                                  </span>
</HeaderLeft>,
                                <HeaderRight>
                                  <span>
                                                                    Right
                                  </span>
</HeaderRight>,
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Right",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <span>
                          Right
</span>,
                        "tag": 5,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": ".1",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <span>
                          Right
</span>,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div>
                      <span>
                                            Right
                      </span>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div>
                  <span>
                                    Left
                  </span>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div>
                    <HeaderLeft>
                                        <span>
                                                            Left
                                        </span>
                    </HeaderLeft>
</div>,
                  <div />,
                  <div>
                    <HeaderRight>
                                        <span>
                                                            Right
                                        </span>
                    </HeaderRight>
</div>,
                ],
                "className": "css-fl33vd",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <header
                class="css-fl33vd"
>
                <div>
                                <span>
                                                Left
                                </span>
                </div>
                <div />
                <div>
                                <span>
                                                Right
                                </span>
                </div>
</header>,
              "tag": 5,
              "type": "header",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div>
                  <HeaderLeft>
                                    <span>
                                                      Left
                                    </span>
                  </HeaderLeft>
</div>,
                <div />,
                <div>
                  <HeaderRight>
                                    <span>
                                                      Right
                                    </span>
                  </HeaderRight>
</div>,
              ],
            },
            "memoizedState": Object {
              "theme": Object {},
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": Array [
                                                                    <HeaderLeft>
                                                                      <span>
                                                                                                Left
                                                                      </span>
                                            </HeaderLeft>,
                                                                    <HeaderRight>
                                                                      <span>
                                                                                                Right
                                                                      </span>
                                            </HeaderRight>,
                                                                  ],
                                                                }
                      }
/>,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <HeaderLeft>
                    <span>
                                        Left
                    </span>
</HeaderLeft>,
                  <HeaderRight>
                    <span>
                                        Right
                    </span>
</HeaderRight>,
                ],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <HeaderLeft>
                        <span>
                                                Left
                        </span>
</HeaderLeft>,
                      <HeaderRight>
                        <span>
                                                Right
                        </span>
</HeaderRight>,
                    ],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <header
                                                class="css-fl33vd"
                        >
                                                <div>
                                                                        <span>
                                                                                                Left
                                                                        </span>
                                                </div>
                                                <div />
                                                <div>
                                                                        <span>
                                                                                                Right
                                                                        </span>
                                                </div>
                        </header>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": Array [
                                                                                      <HeaderLeft>
                                                                                        <span>
                                                                                                                        Left
                                                                                        </span>
                                                        </HeaderLeft>,
                                                                                      <HeaderRight>
                                                                                        <span>
                                                                                                                        Right
                                                                                        </span>
                                                        </HeaderRight>,
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": Array [
                                                                    <HeaderLeft>
                                                                      <span>
                                                                                                Left
                                                                      </span>
                                            </HeaderLeft>,
                                                                    <HeaderRight>
                                                                      <span>
                                                                                                Right
                                                                      </span>
                                            </HeaderRight>,
                                                                  ],
                                                                }
                      }
/>,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <header
                                            class="css-fl33vd"
                      >
                                            <div>
                                                                  <span>
                                                                                        Left
                                                                  </span>
                                            </div>
                                            <div />
                                            <div>
                                                                  <span>
                                                                                        Right
                                                                  </span>
                                            </div>
                      </header>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <HeaderLeft>
                          <span>
                                                    Left
                          </span>
</HeaderLeft>,
                        <HeaderRight>
                          <span>
                                                    Right
                          </span>
</HeaderRight>,
                      ],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "className": "css-fl33vd",
          "context": Object {
            "__glamorous__": undefined,
          },
          "props": Object {
            "children": Array [
              <div>
                <HeaderLeft>
                                <span>
                                                Left
                                </span>
                </HeaderLeft>
</div>,
              <div />,
              <div>
                <HeaderRight>
                                <span>
                                                Right
                                </span>
                </HeaderRight>
</div>,
            ],
          },
          "refs": Object {},
          "setTheme": [Function],
          "state": Object {
            "theme": Object {},
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
          "warned": true,
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div>
              <HeaderLeft>
                            <span>
                                          Left
                            </span>
              </HeaderLeft>
</div>,
            <div />,
            <div>
              <HeaderRight>
                            <span>
                                          Right
                            </span>
              </HeaderRight>
</div>,
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": <header
            class="css-fl33vd"
>
            <div>
                        <span>
                                    Left
                        </span>
            </div>
            <div />
            <div>
                        <span>
                                    Right
                        </span>
            </div>
</header>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <HeaderLeft>
                                <span>
                                                Left
                                </span>
                </HeaderLeft>
</div>,
              <div />,
              <div>
                <HeaderRight>
                                <span>
                                                Right
                                </span>
                </HeaderRight>
</div>,
            ],
            "className": "css-fl33vd",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div>
                <span>
                                Left
                </span>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <HeaderLeft>
                  <span>
                                    Left
                  </span>
</HeaderLeft>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": ".0",
                  "nodeType": "function",
                  "props": Object {
                    "children": <span>
                      Left
</span>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <span>
                      Left
</span>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Left",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Left",
                    ],
                    "type": "span",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "div",
            },
            Object {
              "instance": <div>
                <span>
                                Right
                </span>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <HeaderRight>
                  <span>
                                    Right
                  </span>
</HeaderRight>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": ".1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <span>
                      Right
</span>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <span>
                      Right
</span>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Right",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Right",
                    ],
                    "type": "span",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "header",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
